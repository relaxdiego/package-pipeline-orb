version: 2.1

#
# PIPELINE PARAMETERS
#
parameters:
  orb-repo:
    description: The orb repo where this orb is to be published.
    type: string
    default: relaxdiego/package-pipeline

  vet-the-dev-build:
    description: >
      This is an internal parameter. DO NOT SET THIS. It's used internally by
      this config to determine whether the vetting workflow should be executed.
      This is set to true by the pre-vetting workflow after it has packed and
      published the orb with the dev label.
    type: boolean
    default: false

  orb-dev-build-id:
    description: >
      DO NOT SET THIS. This is an internal parameter used by this pipeline
      to determine which version of the orb to run vet. The value for this
      parmeter will be set by the pre-vetting workflow.
    type: string
    # This version must have been already published manually in order for
    # this pipeline to work. Note that during the execution of the pre-vetting
    # workflow, this is just a placeholder (that must point to a valid version).
    # When this pipeline triggers the post-dev workflow, it will change
    # this to the correct value.
    default: "0.1"


#
# ORBS.
#
orbs:
  # https://circleci.com/developer/orbs/orb/circleci/orb-tools
  orb-tools: circleci/orb-tools@10.0
  # https://circleci.com/developer/orbs/orb/circleci/bats
  bats: circleci/bats@1.0
  # https://circleci.com/developer/orbs/orb/circleci/shellcheck
  shellcheck: circleci/shellcheck@2.0
  # https://circleci.com/developer/orbs/orb/circleci/circleci-cli
  circleci-cli: circleci/circleci-cli@0.1
  # https://circleci.com/developer/orbs/orb/circleci/jq
  jq: circleci/jq@2.2

  # This orb is only used by the vetting workflow, after the pre-vetting
  # workflow has built and published it with a dev label.
  pipeline: relaxdiego/package-pipeline@<< pipeline.parameters.orb-dev-build-id >>


#
# JOBS. These are used only in the pre-vetting workflow.
#
jobs:
  prepare-build-info:
    executor: circleci-cli/default
    steps:
      - checkout

      - run:
          name: Render dev BUILD-INFO
          command: |
             bash .circleci/pre-vetting/scripts/render-dev-build-info.sh > BUILD-INFO

             echo "BUILD-INFO contents:"
             cat BUILD-INFO

      - persist_to_workspace:
          root: .
          paths:
            - BUILD-INFO

  build-dev-orb:
    executor: circleci-cli/default
    steps:
      - attach_workspace:
          at: ~/workspace

      - checkout

      - run:
          name: Build orb
          command: |
            # Prepend BUILD-INFO contents as a single-line comment
            echo "# pipeline:build-info $(jq -c . ~/workspace/BUILD-INFO)" > orb.yml
            circleci orb pack src >> orb.yml
            head -n5 orb.yml

      - run:
          name: Validate orb
          command: |
            circleci orb validate orb.yml

      - persist_to_workspace:
          root: .
          paths:
            - orb.yml

  publish-dev-orb:
    executor: circleci-cli/default
    environment:
      PIPELINE_PACKAGE_REPO: << pipeline.parameters.orb-repo >>
    steps:
      - attach_workspace:
          at: ~/workspace

      - jq/install

      - checkout

      - run:
          name: Publish the dev orb
          command: |
            bash .circleci/pre-vetting/scripts/publish.sh

  trigger-vetting-workflow:
    executor: circleci-cli/default
    steps:
      - attach_workspace:
          at: ~/workspace

      - jq/install

      - checkout

      - run:
          name: Trigger the vetting workflow via the Circle CI API
          command: |
            bash .circleci/pre-vetting/scripts/trigger-vetting-workflow.sh


#
# WORKFLOWS. Divided in to two stages. The first is a pre-vetting workflow which
#            concerned with vetting, building, and publishing a dev release orb.
#            It will then trigger the the vetting workflow which will subjet the
#            pre-release orb through various integration tests. At the end of
#            this process, the vetting workflow will wait for approval to promote
#            the orb to a production release.
workflows:
  # Prepare the orb and publish it as a dev releaseso that the vetting workflow
  # can run against the version that we create and publish here
  #
  # All jobs in this workflow MUST NOT use elements defined in the orb since
  # we cannot depend on unvetted elements in the SUT to perform our pre-vetting!
  #
  # IMPORTANT: All jobs in this workflow SHOULD not use the orb being developed!
  pre-vetting:
    unless: << pipeline.parameters.vet-the-dev-build >>
    jobs:
      - prepare-build-info:
          name: Prepare BUILD-INFO


      - orb-tools/lint:
          name: Lint YAML files
          filters:
            branches:
              only:
                - main
                - maint/.*
            tags:
              ignore:
                - .*


      - shellcheck/check:
          name: Check scripts syntax
          filters:
            branches:
              only:
                - main
                - maint/.*
            tags:
              ignore:
                - .*

          dir: ./src/scripts
          exclude: SC2148


      - bats/run:
          name: Run BATS tests
          filters:
            branches:
              only:
                - main
                - maint/.*
            tags:
              ignore:
                - .*

          path: ./src/tests


      - build-dev-orb:
          name: Build the validated orb
          requires:
            - Prepare BUILD-INFO
            - Lint YAML files
            - Check scripts syntax
            - Run BATS tests
          filters:
            branches:
              only:
                - main
                - maint/.*
            tags:
              ignore:
                - .*


      - publish-dev-orb:
          name: Publish orb as a dev pre-release
          requires:
            - Build the validated orb
          context: orb-publishing
          filters:
            branches:
              only:
                - main
                - maint/.*
            tags:
              ignore:
                - .*

      - trigger-vetting-workflow:
          name: Trigger vetting workflow
          context: orb-publishing
          requires:
            - Publish orb as a dev pre-release

  # This workflow is triggered by the pre-vetting workflow. By this time,
  # pipeline.parameters.pipeline will have already been set to the orb that
  # was published by the pre-vetting workflow. At this point, this workflow's
  # job is to use various elements of the orb as a way to vet its correctnes.
  # At the end of this vetting process, the orb will be promoted to a final release.
  vetting:
    when: << pipeline.parameters.vet-the-dev-build >>
    jobs:
      #
      # Orb Pipeline Vetting
      #
      - pipeline/build-and-test-circleci-orb:
          name: build-and-test CircleCI orb
          context: orb-publishing
          filters:
            branches:
              only:
                - main
                - maint/.*
            tags:
              ignore:
                - .*

          orb-repo: << pipeline.parameters.orb-repo >>

      # - pipeline/validate-and-promote:
      #     name: dev
      #     requires:
      #       - build
      #
      #     package-repo-provider: circleci-orb
      #     package-repo: relaxdiego/package-pipeline
      #     versioning-scheme: semver2
